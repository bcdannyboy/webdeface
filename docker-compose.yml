version: '3.8'

services:
  webdeface:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: webdeface-monitor
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Required environment variables - set these in .env file or override here
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY:?CLAUDE_API_KEY is required}
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN:?SLACK_BOT_TOKEN is required}
      - SLACK_APP_TOKEN=${SLACK_APP_TOKEN:?SLACK_APP_TOKEN is required}
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET:?SLACK_SIGNING_SECRET is required}
      
      # Optional environment variables with defaults
      - SLACK_ALLOWED_USERS=${SLACK_ALLOWED_USERS:-}
      - CLAUDE_MODEL=${CLAUDE_MODEL:-claude-3-sonnet-20240229}
      - CLAUDE_MAX_TOKENS=${CLAUDE_MAX_TOKENS:-4000}
      - CLAUDE_TEMPERATURE=${CLAUDE_TEMPERATURE:-0.1}
      
      # Database configuration
      - DATABASE__URL=${DATABASE__URL:-sqlite:///./data/webdeface.db}
      - DATABASE__ECHO=${DATABASE__ECHO:-false}
      - DATABASE__POOL_SIZE=${DATABASE__POOL_SIZE:-10}
      - DATABASE__MAX_OVERFLOW=${DATABASE__MAX_OVERFLOW:-20}
      
      # Qdrant configuration (optional - will use Qdrant service if available)
      - QDRANT__URL=${QDRANT__URL:-http://qdrant:6333}
      - QDRANT__COLLECTION_NAME=${QDRANT__COLLECTION_NAME:-webdeface}
      - QDRANT__VECTOR_SIZE=${QDRANT__VECTOR_SIZE:-384}
      - QDRANT__DISTANCE=${QDRANT__DISTANCE:-Cosine}
      
      # Scraping configuration
      - SCRAPING__DEFAULT_TIMEOUT=${SCRAPING__DEFAULT_TIMEOUT:-10000}
      - SCRAPING__MAX_RETRIES=${SCRAPING__MAX_RETRIES:-3}
      - SCRAPING__MAX_DEPTH=${SCRAPING__MAX_DEPTH:-3}
      
      # Application configuration
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - KEEP_SCANS=${KEEP_SCANS:-20}
    volumes:
      # Persist data directory for SQLite database and application data
      - webdeface_data:/app/data
      # Optional: Mount configuration file if you want to use YAML config
      - ./config.yaml:/app/config.yaml:ro
    networks:
      - webdeface_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      qdrant:
        condition: service_healthy
        required: false  # Make Qdrant optional

  # Optional Qdrant vector database service
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: webdeface-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - webdeface_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    profiles:
      - qdrant  # Use with: docker-compose --profile qdrant up

volumes:
  webdeface_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  webdeface_network:
    driver: bridge