[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "webdeface-monitor"
description = "Web Defacement Detection and Alerting System"
requires-python = ">=3.11"
dynamic = ["version"]
dependencies = [
    # Core dependencies
    "asyncio-mqtt>=0.11.1",
    "pydantic>=2.0.0",
    "sqlalchemy[asyncio]>=2.0.0",
    "aiosqlite>=0.19.0",
    "qdrant-client>=1.6.0",
    "playwright>=1.40.0",
    "httpx>=0.25.0",
    "blake3>=0.3.3",
    "msgpack>=1.0.7",
    "croniter>=1.4.1",
    "tenacity>=8.2.3",

    # CLI dependencies
    "click>=8.1.0",
    "rich>=13.7.0",

    # API dependencies
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",

    # Configuration and utilities
    "pyyaml>=6.0.1",
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
webdeface-monitor = "src.webdeface.main:main_cli"
webdeface-api = "src.webdeface.main:main_api"

[tool.ruff]
target-version = "py311"
line-length = 88
extend-exclude = ["migrations/", "tests/fixtures/"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit (security)
]
ignore = [
    "E501",  # Line too long (handled by formatter)
    "S101",  # Use of assert (OK in tests)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S106"]  # Allow assert and hardcoded passwords in tests

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "playwright.*",
    "qdrant_client.*",
    "blake3.*",
    "msgpack.*",
]
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "slow: marks tests as slow",
    "asyncio: mark test to run with asyncio",
]
asyncio_mode = "auto"
